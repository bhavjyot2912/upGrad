Number 1:

var scroll = setInterval(function(){ window.scrollBy(0, 1000)}, 1000);  //Scrolling to the bottom of the channel

 
Number 2:

// Function to extract video duration from YouTube video page
function extractVideoDuration(videoLink) {
    return new Promise((resolve, reject) => {
        fetch(videoLink)
            .then(response => response.text())
            .then(text => {
                const match = text.match(/"lengthSeconds":"(\d+)"/);
                if (match && match[1]) {
                    const durationInSeconds = parseInt(match[1]);
                    const minutes = Math.floor(durationInSeconds / 60);
                    const seconds = durationInSeconds % 60;
                    const durationString = `${minutes}:${seconds < 10 ? '0' : ''}${seconds}`;
                    resolve(durationString);
                } else {
                    resolve('N/A');
                }
            })
            .catch(error => {
                console.error('Error fetching video page:', error);
                resolve('N/A');
            });
    });
}

// Extract video titles, URLs, number of views, and durations
console.clear();
const urls = $$('a');
urls.forEach(async function(v, i, a) {
    if (v.id == "video-title-link" && v.href) {
        const videoDuration = await extractVideoDuration(v.href);
        const viewsMatch = v.__shady_native_innerHTML.match(/aria-label="(.+?)"/g);
        const views = viewsMatch ? viewsMatch[0].match(/[\d,]+ views/g)[0] : 'N/A';
        console.log(`\t${new Date().toLocaleDateString()}\t${v.title}\t${v.href}\t${views}\t${videoDuration}`);
    }
});
